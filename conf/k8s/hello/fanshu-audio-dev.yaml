apiVersion: apps/v1
kind: Deployment
metadata:
  name: fanshu-audio-consumer-dev
  namespace: grey
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fanshu-audio-consumer-dev
  template:
    metadata:
      labels:
        app: fanshu-audio-consumer-dev
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: audio
                    operator: In
                    values:
                      - "true"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - fanshu-audio-consumer-dev
                topologyKey: topology.kubernetes.io/zone
      restartPolicy: Always
      hostNetwork: True
      imagePullSecrets:
        - name: harbor
      terminationGracePeriodSeconds: 3
      containers:
        - name: consumer
          resources:
            limits:
              cpu: 4 # Required
              memory: 18Gi # Required
            requests:
              cpu: 2
              memory: 8Gi
          imagePullPolicy: Always
          image: __IMAGE__
          command:
            - "./kafka-consumer-cpp"
            - "-connect_timeout_as_unreachable=20"
            - "-health_check_interval=1"
            - "-defer_close_second=10"
            - "-config_file=/app/runtime/fanshu-audio-dev.conf"
          ports:
            - containerPort: 8000
              hostPort: 8000

          livenessProbe:
            httpGet:
              path: /
              port: 8000 # Required
            initialDelaySeconds: 5
            failureThreshold: 3
            timeoutSeconds: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8000 # Required
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 10
          volumeMounts: #挂载volumes中定义的磁盘
            - name: data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /app/runtime
        - name: srv
          imagePullPolicy: Always
          image: harbor.bigo.sg/bigo_ai/infer/kafka-consumer:py-3.5
          command:
            - "python3"
            - "srv.py"
          env:
            - name: NAME
              value: "va_test_audit_call_hello_keyword_proxy"
            - name: REGIONID
              value: "5"

      volumes:
        - name: data
          hostPath:
            path: /data
        - name: tmp
          hostPath:
            path: /tmp
        - name: config
          configMap:
            name: fanshu-audio-consumer-dev
